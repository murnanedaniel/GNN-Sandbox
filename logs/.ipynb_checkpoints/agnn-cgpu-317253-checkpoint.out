2019-11-08 14:58:32,336 INFO Initialized rank 0 out of 1
2019-11-08 14:58:32,336 INFO Configuration: {'output_dir': '/global/cscratch1/sd/danieltm/ExaTrkX/counter_results/counter001', 'trainer': {'name': 'gnn_sparse'}, 'data': {'name': 'hitgraphs_sparse', 'input_dir': '/global/cscratch1/sd/danieltm/ExaTrkX/counter_data/hitgraphs_small_000', 'n_train': 1000, 'n_valid': 100, 'real_weight': 3.0, 'batch_size': 1, 'n_workers': 4}, 'model': {'name': 'counter', 'input_dim': 3, 'hidden_dim': 64, 'layer_norm': True, 'n_graph_iters': 4, 'max_tracks': 40, 'loss_func': 'cross_entropy'}, 'optimizer': {'name': 'Adam', 'learning_rate': 0.1, 'lr_scaling': 'sqrt', 'lr_warmup_epochs': 5, 'lr_decay_schedule': [{'start_epoch': 10, 'end_epoch': 30, 'factor': 0.5}, {'start_epoch': 30, 'end_epoch': 50, 'factor': 0.1}, {'start_epoch': 50, 'end_epoch': 70, 'factor': 0.05}, {'start_epoch': 70, 'end_epoch': 90, 'factor': 0.01}]}, 'training': {'n_epochs': 90}, 'n_ranks': 1}
2019-11-08 14:58:32,336 INFO Saving job outputs to /global/cscratch1/sd/danieltm/ExaTrkX/counter_results/counter001
2019-11-08 14:58:32,336 INFO Writing config via pickle to /global/cscratch1/sd/danieltm/ExaTrkX/counter_results/counter001/config.pkl
2019-11-08 14:58:33,407 INFO Loaded 1000 training samples
2019-11-08 14:58:33,408 INFO Loaded 100 validation samples
2019-11-08 14:58:33,408 INFO Choosing GPU 0
2019-11-08 14:58:36,752 INFO Model: 
GNNTrackCounter(
  (input_network): Sequential(
    (0): Linear(in_features=3, out_features=64, bias=True)
    (1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    (2): Tanh()
  )
  (edge_network): EdgeNetwork(
    (network): Sequential(
      (0): Linear(in_features=134, out_features=64, bias=True)
      (1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (2): Tanh()
      (3): Linear(in_features=64, out_features=64, bias=True)
      (4): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (5): Tanh()
      (6): Linear(in_features=64, out_features=64, bias=True)
      (7): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (8): Tanh()
      (9): Linear(in_features=64, out_features=1, bias=True)
    )
  )
  (node_network): NodeNetwork(
    (network): Sequential(
      (0): Linear(in_features=283, out_features=64, bias=True)
      (1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (2): Tanh()
      (3): Linear(in_features=64, out_features=64, bias=True)
      (4): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (5): Tanh()
      (6): Linear(in_features=64, out_features=64, bias=True)
      (7): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (8): Tanh()
      (9): Linear(in_features=64, out_features=64, bias=True)
      (10): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      (11): Tanh()
    )
  )
  (output_network): OutputNetwork(
    (network): Sequential(
      (0): Linear(in_features=67, out_features=64, bias=True)
      (1): Tanh()
      (2): Linear(in_features=64, out_features=64, bias=True)
      (3): Tanh()
      (4): Linear(in_features=64, out_features=64, bias=True)
      (5): Tanh()
      (6): Linear(in_features=64, out_features=41, bias=True)
    )
  )
)
Parameters: 64298
2019-11-08 14:58:36,753 INFO Epoch 0
Prediction:  tensor([-1.8101, -1.7047, -0.2004, -1.5195, -0.0057, -1.1481, -1.1731, -1.1404,
        -0.3249, -0.6220, -0.5387,  0.0599, -0.9564, -1.4571,  4.5693, -0.9172,
         0.1330, -1.0495, -0.1538, -0.8239, -1.1493, -0.9441, -1.3697, -1.0919,
        -1.2189, -0.8145, -0.5422, -1.0938, -0.5188, -0.7029, -0.6273, -0.8417,
        -0.6293, -0.7028, -0.7632,  0.2584, -0.0099, -0.2578, -0.7658, -0.6753,
        -1.3914], device='cuda:0', grad_fn=<AddBackward0>)  location:  tensor(14, device='cuda:0')
Truth:  tensor(19, device='cuda:0')
Prediction:  tensor([-2.1073, -1.9378, -1.6425, -1.1064, -2.7224, -1.4284, -2.0408, -1.0908,
        -1.8261, -2.0043, -2.8369, -1.1691, -1.3289, -3.4920,  2.0335, -2.5257,
        -1.3795, -1.4947, -1.8256, -2.7361, -1.1580, -0.9388, -2.0044, -2.2385,
        -2.0974, -2.5035, -1.6440, -1.1860, -1.1205, -1.8429, -1.7874, -2.2194,
        -2.9670, -2.3178, -2.6670, -1.9462, -2.3278, -1.4545, -2.0320, -2.0622,
        -1.2757], device='cuda:0', grad_fn=<AddBackward0>)  location:  tensor(14, device='cuda:0')
Truth:  tensor(11, device='cuda:0')
